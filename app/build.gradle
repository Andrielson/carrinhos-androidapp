apply plugin: 'com.android.application'

ext {
    archRoomVersion = '1.0.0'
    archLifecycleVersion = '1.1.0'
    firebaseVersion = '11.8.0'
    supportLibraryVersion = '27.1.0'
    stethoVersion = '1.5.0'
    uniqueVersionCode = { version, suffix -> Integer.parseInt(String.format("%s%02d", version.replaceAll("[^0-9]", ""), suffix)) }
}

def googleservices = false

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "tk.andrielson.carrinhos.androidapp"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 3
        versionName "0.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "DATABASE", "VERSAO"
    productFlavors {
        firebase {
            dimension "DATABASE"
            applicationIdSuffix = "firebase"
            googleservices = true
        }
        room {
            dimension "DATABASE"
            applicationIdSuffix = "room"
        }
        realm {
            dimension "DATABASE"
            applicationIdSuffix = "realm"
        }
        objectbox {
            dimension "DATABASE"
            applicationIdSuffix = "objectbox"
        }
        TESTE {
            dimension "VERSAO"
            applicationIdSuffix = "teste"
            buildConfigField("boolean", "TESTE", 'true')
        }
        PRODUCAO {
            dimension "VERSAO"
            buildConfigField("boolean", "TESTE", 'false')
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "DESENVOLVIMENTO", 'false')
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "DESENVOLVIMENTO", 'true')
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def base = variant.productFlavors[0].name
            def modo = variant.productFlavors[1].name
            def version = variant.versionName
            output.outputFileName = "Carrinhos" + base + "_" + modo + "_" + version + ".apk"
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support Libraries
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Android Architeture Lifecycle
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$archLifecycleVersion"

    // Facebook Stetho
    implementation "com.facebook.stetho:stetho:$stethoVersion"

    //Firebase
    firebaseImplementation "com.google.firebase:firebase-core:$firebaseVersion"
    firebaseImplementation "com.google.firebase:firebase-firestore:$firebaseVersion"
    firebaseImplementation 'com.firebaseui:firebase-ui-firestore:3.2.2'

    // Android Architeture Room Persistence Library
    roomImplementation "android.arch.persistence.room:runtime:$archRoomVersion"
    roomAnnotationProcessor "android.arch.persistence.room:compiler:$archRoomVersion"

    // Ferramentas de teste
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'org.jetbrains:annotations-java5:15.0'
}


if (googleservices) {
    apply plugin: 'com.google.gms.google-services'
}